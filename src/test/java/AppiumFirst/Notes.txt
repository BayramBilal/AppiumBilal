UI Automator is UI testing framework introduced by Google to facilitate automation on a Android device or emulator.

Appium leverages this UiAutomator with its own wrapper and came up with UiAutomator2 Driver to automate the Android Apps.

main.js path : C:\Users\Selim\AppData\Roaming\npm\node_modules\appium\build\lib\main.js

Appium supports locators (id, xpath, accessibiltyId, className, androidUIAutomator

Appium Inspector windows = https://github.com/appium/appium-inspector/releases  ---> Appium-Inspector-windows-2022.11.1.exe set up

http://127.0.0.1:4723



	    driver.findElement(AppiumBy.accessibilityId("Preference")).click();
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='3. Preference dependencies']")).click();
		driver.findElement(By.id("android:id/checkbox")).click();
		driver.findElement(By.xpath("(//android.widget.RelativeLayout)[2]")).click();
		driver.findElement(By.id("android:id/edit")).sendKeys("TURKSAT-KABLONET-3C41-5G");
		driver.findElements(AppiumBy.className("android.widget.Button")).get(1).click();


mobile: longClickGesture
This gesture performs long click action on the given element/coordinates. Available since Appium v1.19

Supported arguments
elementId: The id of the element to be clicked. If the element is missing then both click offset coordinates must be provided. If both the element id and offset are provided then the coordinates are parsed as relative offsets from the top left corner of the element.
x: The x-offset coordinate
y: The y-offset coordinate
duration: Click duration in milliseconds. 500 by default. The value must not be negative
Usage examples
// Java
((JavascriptExecutor) driver).executeScript("mobile: longClickGesture", ImmutableMap.of(
    "elementId", ((RemoteWebElement) element).getId()
));
# Python
driver.execute_script('mobile: longClickGesture', {'x': 100, 'y': 100, 'duration': 1000})